include: package:lints/recommended.yaml

analyzer:

  errors:
    todo: ignore
    invalid_assignment: warning
    missing_return: warning
    dead_code: info
    mixin_inherits_from_not_object: ignore
    prefer_single_quotes: error
    prefer_relative_imports: error
    avoid_positional_boolean_parameters: warning
    public_member_api_docs: false
    omit_local_variable_types: warning
    prefer_const_declarations: error
    prefer_const_constructors: error
  exclude:
    - '**/*.g.dart'
    - lib/**/*.g.dart

# https://dart-lang.github.io/linter/lints/options/options.html

linter:
  rules:
    # effective_dart  1.2.3
    # STYLE
    - camel_case_types
    - library_names
    - file_names
    - library_prefixes
    - non_constant_identifier_names
    #- constant_identifier_names # prefer
    - directives_ordering
    #- lines_longer_than_80_chars # avoid
    - curly_braces_in_flow_control_structures
    - prefer_relative_imports
    - prefer_const_declarations
    - prefer_const_constructors

    # DOCUMENTATION
    #- slash_for_doc_comments
    #- package_api_docs # prefer # ?
    #- public_member_api_docs # prefer # ?
    #- comment_references # Unused because https://github.com/dart-lang/sdk/issues/36974

    # USAGE

    - prefer_adjacent_string_concatenation
    - prefer_interpolation_to_compose_strings # prefer
    - unnecessary_brace_in_string_interps # avoid
    - prefer_collection_literals
    - avoid_function_literals_in_foreach_calls # avoid
    - prefer_iterable_whereType
    - prefer_function_declarations_over_variables
    - unnecessary_lambdas
    - prefer_equal_for_default_values
    - avoid_init_to_null
    - unnecessary_getters_setters
    #- unnecessary_getters # prefer # Disabled pending fix: https://github.com/dart-lang/linter/issues/23
    #- prefer_expression_function_bodies # consider
    - unnecessary_this
    - prefer_initializing_formals
    - type_init_formals
    - empty_constructor_bodies
    - unnecessary_new
    - unnecessary_const
    - avoid_catches_without_on_clauses # avoid
    - use_rethrow_when_possible

    # DESIGN
    - use_to_and_as_if_applicable # prefer
    - one_member_abstracts # avoid
    - avoid_classes_with_only_static_members # avoid
    - prefer_final_fields # prefer
    - use_setters_to_change_properties
    - avoid_setters_without_getters
    - avoid_returning_null # avoid
    #- avoid_returning_this # avoid
    - type_annotate_public_apis # prefer
    #- prefer_typing_uninitialized_variables # consider
    - omit_local_variable_types # avoid
    - avoid_return_types_on_setters
    - prefer_generic_function_type_aliases
    - avoid_private_typedef_functions # prefer
    #- use_function_type_syntax_for_parameters # consider
    #- avoid_positional_boolean_parameters # avoid
    - hash_and_equals
    - avoid_null_checks_in_equality_operators


    # pedantic: ^1.9.0
    - always_declare_return_types
    - always_require_non_null_named_parameters
    - prefer_conditional_assignment
    - prefer_for_elements_to_map_fromIterable
    - prefer_if_null_operators
    - prefer_single_quotes
    #- prefer_double_quotes
    - prefer_spread_collections

    # pedantic: ^1.8.0
    - avoid_empty_else
    - avoid_relative_lib_imports
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - empty_catches
    - no_duplicate_case_values
    - null_closures
    - prefer_contains
    - prefer_is_empty
    - prefer_is_not_empty
    - recursive_getters
    - unawaited_futures
    - unnecessary_null_in_if_null_operators
    - unrelated_type_equality_checks
    - valid_regexps

    # extras
    - avoid_returning_null_for_future
    - avoid_slow_async_io
    - cancel_subscriptions
    - close_sinks
    - control_flow_in_finally
    - empty_statements
    - prefer_void_to_null
    - unnecessary_statements
    - always_put_required_named_parameters_first
    - annotate_overrides
    - avoid_double_and_int_checks
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_unnecessary_containers
    - await_only_futures
    - camel_case_extensions
    #- cascade_invocations
